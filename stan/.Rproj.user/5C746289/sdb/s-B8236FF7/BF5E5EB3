{
    "collab_server" : "",
    "contents" : "# RStanを使ってみる\n## 参考：R stan導入公開版：http://www.slideshare.net/KojiKosugi/r-stan\n\nlibrary(rstan)\n\n# 公式サイトのeight school とやらのデータを用意\nschools_dat <- list(J = 8, \n                    y = c(28,  8, -3,  7, -1,  1, 18, 12),\n                    sigma = c(15, 10, 16, 11,  9, 11, 10, 18))\n\n# stanをやってみる\n## stan関数でstanを呼んでいる\n## デフォルトでは、サンプリング回数の半分がWarmup\nfit <- stan(file = '8schools.stan',  # stanファイル\n            data = schools_dat,      # data\n            iter = 1000,             # 1000サンプリング（反復回数）\n            chains = 4)              # 4セットやる\n\n# 結果を確認\nprint(fit)\n\n# 可視化\ntraceplot(fit)\nplot(fit)\n\n# 世界一簡単な例\nn <- 100\nmu <- 50\nsig <- 10\ny <- rnorm(n, mu, sig)\n\n# 平均と分散を推定するstanコード\nstancode <- '\ndata{\n  int<lower=0> T;\n  real N[T];\n}\nparameters {\n  real mu;\n  real<lower=0> s2;\n}\nmodel{\n  N ~ normal(mu, sqrt(s2));\n  s2 ~ cauchy(0, 5);\n}\n'\ndatastan <- list(N=y, T=n)\nfit <- stan(model_code = stancode,\n            data = datastan,\n            iter = 1000,\n            chain = 4)\n\n# 平均と分散の推定結果可視化\nprint(fit)\ntraceplot(fit)\nmean(y)\nvar(y)\n",
    "created" : 1465306431861.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "409784061",
    "id" : "BF5E5EB3",
    "lastKnownWriteTime" : 1465308488,
    "last_content_update" : 1465308488559,
    "path" : "~/git/MyPractice/stan/rstan.R",
    "project_path" : "rstan.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}